En el cuerpon de la funcion empezamos un case selector en el cual sacamos de la entrada de argumentos a traves de un ciclo for.

Si el case selector detecta una opcion de las registradas se actualiza su variable con un valor.

Se hace control de errores en cada sitio, a fin de especificar el error concreto.

El error en la linea de entrada se controla con un counter, el cual decrementa si no encuentra una de las variables registradas cada 2 iteraciones del ciclo for.
Esto proboca una llamada a la funcion error.
Ademas se controla asi una incorrecta asignacion de la variable ruta a un elemento indeseado.

Despues del case selector se llama a la funcion busqueda.

La funcion busqueda tiene una detecion para cada una de las variables definidas. Si estas estan vacias no se tendran en cuenta a la hora de la ejecucion recursiva de la busqueda.
En este momento se establecera la ruta tambien como la pasada por argumento o la actual.

Un if determina si es un archivo, directorio o si el tipo se encuentra vacio. Si ni nguna de estas es correcta, se lanza un error, porque se ha introducido un tipo imposible.
Accedemos con un for a los distintos nodos hijos del actual. Comprobamos su tipo (por hacer: comprobar su profundidad) e imprimimos por salida el archibo, despues aplicamos recursividad.




#TODO
profundidad correctamente
Posible ampliacion a mayor funcionalidad.